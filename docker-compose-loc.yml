version: '3.0'

services:

  redis-server:
   build :
      context: .
      dockerfile: ./redis/.
   container_name: redis-service
   restart: on-failure 
   networks:
      - redis-net
   ports:
      - "6378:6378"
  
  calendar:
    environment:
       - REDIS_HOST=redis-server
       - POSTGRES_HOST=db_calendar
       - NODE_ENV=default
    networks:
       - redis-net
    depends_on:
       - redis-server
       - db_calendar
    command: "npm run start"

  auth:
    environment:
       - REDIS_HOST=redis-loc-server
       - POSTGRES_HOST=db_auth
       - NODE_ENV=default
    networks:
       - redis-net
    depends_on:
       - redis-server
       - db_auth
    command: "npm run start"

  gateway:
    environment:
       - REDIS_HOST=redis-server
       - NODE_ENV=default
    ports:
       - "3000:3000"
    networks:
       - redis-net
    depends_on:
       - redis-server
       - auth
       - calendar
    command: "npm run start"

  db_auth:
    build:
      context: .
      dockerfile: ./auth/auth-db/Dockerfile-auth
    container_name: auth_db
    ports:
       - "5432:5432"
    networks:
       - redis-net
    volumes: 
       - postgre-data-auth:/var/lib/postgresql/data
    restart: always

  db_calendar:
    build:
      context: .
      dockerfile: ./calendar/calendar-db/Dockerfile-calendar
    container_name: calendar_db
    ports:
       - "5433:5432"
    networks:
       - redis-net
    volumes: 
       - postgre-data-calendar:/var/lib/postgresql/data
    restart: always

networks:
   redis-net:
    external: true
volumes:
  postgre-data-auth:
       driver : local
  postgre-data-calendar:
       driver : local  